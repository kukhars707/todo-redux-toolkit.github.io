{"version":3,"file":"index.3ba5ade71c9d1e452f32.bundle.js","mappings":";;;;;;;;;;;;;;AAAuD;AAChD,mCAAmC,OAAO,0BAAW;AACrD,qBAAqB,sBAAW;;;;;ACFvC;AAC+C;AAC/C;AACO,iBAAiB,yCAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD,oCAAoC;AACtF,SAAS;AACT;AACA,0DAA0D,uCAAuC;AACjG;AACA,SAAS;AACT,KAAK;AACL,CAAC;AACM;AACA,qCAAqC;AAC5C,mDAAe,kBAAkB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BmB;AACI;AACO;AACtB;AACI;AACE;AACE;AACgB;AAC5B;AACQ;AACQ;AACZ;AACQ;AACd;AACgB;AACR;AAC5C;AACA,aAAa,kBAAQ;AACrB,aAAa,kBAAQ;AACrB,eAAe,cAAc,oBAAoB,qBAAqB;AACtE,mBAAmB,cAAc;AACjC,wBAAwB,qBAAW;AACnC;AACA;AACA;AACA;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA,KAAK;AACL,sBAAsB,qBAAW;AACjC;AACA,KAAK;AACL,YAAY,mBAAmB,CAAC,kBAAG,IAAI,MAAM,+CAA+C;AAC5F,QAAQ,mBAAmB,CAAC,qBAAM,IAAI,0BAA0B,yCAAyC;AACzG,YAAY,mBAAmB,CAAC,sBAAO;AACvC,gBAAgB,mBAAmB,CAAC,yBAAU,IAAI,iCAAiC;AACnF,gBAAgB,mBAAmB,CAAC,yBAAU,IAAI,sBAAsB;AACxE,oBAAoB,mBAAmB,CAAC,qBAAU;AAClD,QAAQ,mBAAmB,CAAC,kBAAG,IAAI,MAAM,4FAA4F;AACrI,YAAY,mBAAmB,CAAC,kBAAG,IAAI,MAAM,sFAAsF;AACnI,gBAAgB,mBAAmB,CAAC,wBAAS,IAAI,wGAAwG,mCAAmC;AAC5L,gBAAgB,mBAAmB,CAAC,qBAAM,IAAI,8CAA8C;AAC5F,gCAAgC,mBAAmB,CAAC,mBAAI,IAAI,mBAAmB,0DAA0D,6BAA6B,QAAQ,mBAAmB,CAAC,wBAAQ,IAAI,cAAc;AAC5N,gBAAgB,mBAAmB,CAAC,2BAAY;AAChD,gBAAgB,mBAAmB,CAAC,yBAAU,IAAI,0DAA0D,gBAAgB,MAAM,eAAe;AACjJ,oBAAoB,mBAAmB,CAAC,4BAAiB;AACzD,gBAAgB,mBAAmB,CAAC,uBAAQ,IAAI,yBAAyB,gBAAgB,QAAQ,GAAG,wCAAwC,OAAO,MAAM;AACzJ;AACA,8CAAe,GAAG,EAAC;;;AClD+B;AACR;AACnC,YAAY,4CAAc;AACjC;AACA,eAAe,YAAY;AAC3B,KAAK;AACL,CAAC;;;;;;;;;ACN0C;AACQ;AACnD,YAAY,8BAAW;AACvB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,kBAAkB,4BAAQ;AAC1B,SAAS;AACT,KAAK;AACL,CAAC;AACD,gDAAe,KAAK,EAAC;;;ACfK;AACO;AACM;AACf;AACQ;AACqB;AACzB;AAC5B,gBAAe,CAAC,mBAAmB,CAAC,gBAAgB;AACpD,IAAI,mBAAmB,CAAC,4BAAa,IAAI,OAAO,SAAK,EAAE;AACvD,QAAQ,mBAAmB,CAAC,mBAAQ,IAAI,OAAO,KAAK,EAAE;AACtD,YAAY,mBAAmB,CAAC,OAAG","sources":["webpack://todo-react/./src/hooks/index.ts","webpack://todo-react/./src/store/todosReducer.ts","webpack://todo-react/./src/App.tsx","webpack://todo-react/./src/store/index.ts","webpack://todo-react/./src/theme.ts","webpack://todo-react/./src/index.tsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nexport var useAppDispatch = function () { return useDispatch(); };\nexport var useAppSelector = useSelector;\n","var _a;\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = [];\nexport var todosSlice = createSlice({\n    name: 'todos',\n    initialState: initialState,\n    reducers: {\n        create: function (state, action) {\n            var newTask = {\n                id: new Date().getTime().toString(),\n                todo: action.payload,\n                checked: false,\n            };\n            state.push(newTask);\n        },\n        remove: function (state, action) {\n            return state.filter(function (item) { return item.id !== action.payload; });\n        },\n        complate: function (state, action) {\n            var index = state.findIndex(function (item) { return item.id === action.payload.id; });\n            state[index].checked = action.payload.checked;\n        },\n    },\n});\nexport var create = (_a = todosSlice.actions, _a.create), remove = _a.remove, complate = _a.complate;\nexport var selectCount = function (state) { return state.todos; };\nexport default todosSlice.reducer;\n","import React, { useState, useCallback } from 'react';\nimport { useAppSelector, useAppDispatch } from './hooks';\nimport { create, remove, complate } from './store/todosReducer';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport Toolbar from '@mui/material/Toolbar';\nvar App = function () {\n    var _a = useState(''), todo = _a[0], setTodo = _a[1];\n    var _b = useState(false), validadion = _b[0], setValidadion = _b[1];\n    var task = useAppSelector(function (state) { return state.todos; });\n    var dispatch = useAppDispatch();\n    var handleAddTodo = useCallback(function () {\n        if (!todo) {\n            setValidadion(true);\n        }\n        else {\n            dispatch(create(todo));\n            setValidadion(false);\n            setTodo('');\n        }\n    }, [todo, dispatch]);\n    var handleToSRC = useCallback(function () {\n        window.open('https://github.com/kukhars707/todo-redux-toolkit', '_blank');\n    }, []);\n    return (React.createElement(Box, { sx: { backgroundColor: '#f3f3f3', height: '100vh' } },\n        React.createElement(AppBar, { position: \"static\", sx: { marginBottom: '20px', display: 'flex' } },\n            React.createElement(Toolbar, null,\n                React.createElement(Typography, { variant: \"h6\", component: \"div\" }, \"Todo List\"),\n                React.createElement(IconButton, { onClick: handleToSRC },\n                    React.createElement(GitHubIcon, null)))),\n        React.createElement(Box, { sx: { display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' } },\n            React.createElement(Box, { sx: { display: 'flex', marginBottom: '20px', width: 360, justifyContent: 'space-between' } },\n                React.createElement(TextField, { value: todo, error: validadion, label: \"Todo\", placeholder: \"Enter your task\", onChange: function (e) { return setTodo(e.target.value); } }),\n                React.createElement(Button, { variant: \"contained\", onClick: handleAddTodo }, \"add\")),\n            task.length > 0 && (React.createElement(List, { dense: true, sx: { width: 360, maxWidth: 360, bgcolor: 'background.paper' } }, task.map(function (item) { return (React.createElement(ListItem, { key: item.id },\n                React.createElement(ListItemText, null, item.todo),\n                React.createElement(IconButton, { color: \"error\", component: \"span\", onClick: function () { return dispatch(remove(item.id)); } },\n                    React.createElement(DeleteForeverIcon, null)),\n                React.createElement(Checkbox, { onChange: function (e) { return dispatch(complate({ id: item.id, checked: e.target.checked })); } }))); }))))));\n};\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todosReducer from './todosReducer';\nexport var store = configureStore({\n    reducer: {\n        todos: todosReducer,\n    },\n});\n","import { red } from '@mui/material/colors';\nimport { createTheme } from '@mui/material/styles';\nvar theme = createTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n    },\n});\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\nReactDOM.render(React.createElement(React.StrictMode, null,\n    React.createElement(ThemeProvider, { theme: theme },\n        React.createElement(Provider, { store: store },\n            React.createElement(App, null)))), document.getElementById('root'));\n"],"names":[],"sourceRoot":""}